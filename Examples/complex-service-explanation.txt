Explanation of systemd options in complex-service.service:

- Description: Complex Service
- After: network.target
- Requires: remote-fs.target syslog.target
- Wants: nss-lookup.target
- Before: multi-user.target
- ConditionPathExists: /etc/complex-service/complex.conf
- Documentation: https://example.com/complex-service-docs
- ExecStartPre: /usr/bin/complex-pre-start
- EnvironmentFile: /etc/complex-service/environment
- ExecStart: /usr/bin/complex-start
- ExecReload: /usr/bin/complex-reload
- ExecStop: /usr/bin/complex-stop
- ExecStopPost: /usr/bin/complex-stop-post
- Restart: on-failure
- User: complexuser
- Group: complexgroup
- RestartSec: 10
- TimeoutSec: 30
- Type: forking
- PIDFile: /var/run/complex-service.pid
- PrivateTmp: true
- PrivateDevices: true
- WantedBy: graphical.target
# 
# Explanation of SysV init conventions: 
#
# - Dependencies: Manage dependencies manually within this script.
# - ConditionPathExists: Check for file existence within this script.
# - Exec Commands: Include commands from ExecStart, ExecReload, ExecStop, and ExecStopPost
#   within the start() and stop() functions.
# - Restart on Failure: Implement custom restart logic within this script.
# - User and Group: Specify the user and group within this script.
# - Restart Delay and Timeout: Customize restart delay and timeout using timers or sleep intervals.
# - Service Type: Define the service type using custom logic.
# - PID File: Create and manage a PID file manually.
# - Security Features: Implement security features within this script.
# - Target: In SysV init, there is no direct equivalent to systemd targets.
# - Use placement and naming conventions within /etc/rc.d/ directories to control service startup.
# - EnvironmentFile: Specifies the path to an environment file that sets environment
#   variables for the service. In SysV init, you may need to manually export environment
#   variables within the script, whereas systemd provides a dedicated option for this purpose.
# - RestartSec: Sets the time to wait (in seconds) before restarting the service after
#   an unexpected exit. In SysV init scripts, you might need to implement custom logic
#   for restart delays, whereas systemd simplifies this with the RestartSec option.
